# 0 "MLX42/include/MLX42/MLX42.h"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "MLX42/include/MLX42/MLX42.h"
# 32 "MLX42/include/MLX42/MLX42.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 1 3 4
# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4

# 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 321 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef int wchar_t;
# 415 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
# 426 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h" 3 4
} max_align_t;
# 33 "MLX42/include/MLX42/MLX42.h" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 392 "/usr/include/features.h" 3 4
# 1 "/usr/include/features-time64.h" 1 3 4
# 20 "/usr/include/features-time64.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 21 "/usr/include/features-time64.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 22 "/usr/include/features-time64.h" 2 3 4
# 393 "/usr/include/features.h" 2 3 4
# 486 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 559 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 560 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 561 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 487 "/usr/include/features.h" 2 3 4
# 510 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 511 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 27 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef long int __suseconds64_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 28 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 35 "/usr/include/stdint.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 87 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdint.h" 2 3 4
# 34 "MLX42/include/MLX42/MLX42.h" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stdbool.h" 1 3 4
# 35 "MLX42/include/MLX42/MLX42.h" 2
# 53 "MLX42/include/MLX42/MLX42.h"

# 53 "MLX42/include/MLX42/MLX42.h"
typedef enum action
{
 MLX_RELEASE = 0,
 MLX_PRESS = 1,
 MLX_REPEAT = 2,
} action_t;
# 72 "MLX42/include/MLX42/MLX42.h"
typedef enum modifier_key
{
 MLX_SHIFT = 0x0001,
 MLX_CONTROL = 0x0002,
 MLX_ALT = 0x0004,
 MLX_SUPERKEY = 0x0008,
 MLX_CAPSLOCK = 0x0010,
 MLX_NUMLOCK = 0x0020,
} modifier_key_t;







typedef enum mouse_key
{
 MLX_MOUSE_BUTTON_LEFT = 0,
 MLX_MOUSE_BUTTON_RIGHT = 1,
 MLX_MOUSE_BUTTON_MIDDLE = 2,
} mouse_key_t;







typedef enum mouse_mode
{
 MLX_MOUSE_NORMAL = 0x00034001,
 MLX_MOUSE_HIDDEN = 0x00034002,
 MLX_MOUSE_DISABLED = 0x00034003,
} mouse_mode_t;
# 117 "MLX42/include/MLX42/MLX42.h"
typedef enum cursor
{
 MLX_CURSOR_ARROW = 0x00036001,
 MLX_CURSOR_IBEAM = 0x00036002,
 MLX_CURSOR_CROSSHAIR = 0x00036003,
 MLX_CURSOR_HAND = 0x00036004,
 MLX_CURSOR_HRESIZE = 0x00036005,
 MLX_CURSOR_VRESIZE = 0x00036006,
} cursor_t;






typedef enum keys
{
 MLX_KEY_SPACE = 32,
 MLX_KEY_APOSTROPHE = 39,
 MLX_KEY_COMMA = 44,
 MLX_KEY_MINUS = 45,
 MLX_KEY_PERIOD = 46,
 MLX_KEY_SLASH = 47,
 MLX_KEY_0 = 48,
 MLX_KEY_1 = 49,
 MLX_KEY_2 = 50,
 MLX_KEY_3 = 51,
 MLX_KEY_4 = 52,
 MLX_KEY_5 = 53,
 MLX_KEY_6 = 54,
 MLX_KEY_7 = 55,
 MLX_KEY_8 = 56,
 MLX_KEY_9 = 57,
 MLX_KEY_SEMICOLON = 59,
 MLX_KEY_EQUAL = 61,
 MLX_KEY_A = 65,
 MLX_KEY_B = 66,
 MLX_KEY_C = 67,
 MLX_KEY_D = 68,
 MLX_KEY_E = 69,
 MLX_KEY_F = 70,
 MLX_KEY_G = 71,
 MLX_KEY_H = 72,
 MLX_KEY_I = 73,
 MLX_KEY_J = 74,
 MLX_KEY_K = 75,
 MLX_KEY_L = 76,
 MLX_KEY_M = 77,
 MLX_KEY_N = 78,
 MLX_KEY_O = 79,
 MLX_KEY_P = 80,
 MLX_KEY_Q = 81,
 MLX_KEY_R = 82,
 MLX_KEY_S = 83,
 MLX_KEY_T = 84,
 MLX_KEY_U = 85,
 MLX_KEY_V = 86,
 MLX_KEY_W = 87,
 MLX_KEY_X = 88,
 MLX_KEY_Y = 89,
 MLX_KEY_Z = 90,
 MLX_KEY_LEFT_BRACKET = 91,
 MLX_KEY_BACKSLASH = 92,
 MLX_KEY_RIGHT_BRACKET = 93,
 MLX_KEY_GRAVE_ACCENT = 96,
 MLX_KEY_ESCAPE = 256,
 MLX_KEY_ENTER = 257,
 MLX_KEY_TAB = 258,
 MLX_KEY_BACKSPACE = 259,
 MLX_KEY_INSERT = 260,
 MLX_KEY_DELETE = 261,
 MLX_KEY_RIGHT = 262,
 MLX_KEY_LEFT = 263,
 MLX_KEY_DOWN = 264,
 MLX_KEY_UP = 265,
 MLX_KEY_PAGE_UP = 266,
 MLX_KEY_PAGE_DOWN = 267,
 MLX_KEY_HOME = 268,
 MLX_KEY_END = 269,
 MLX_KEY_CAPS_LOCK = 280,
 MLX_KEY_SCROLL_LOCK = 281,
 MLX_KEY_NUM_LOCK = 282,
 MLX_KEY_PRINT_SCREEN = 283,
 MLX_KEY_PAUSE = 284,
 MLX_KEY_F1 = 290,
 MLX_KEY_F2 = 291,
 MLX_KEY_F3 = 292,
 MLX_KEY_F4 = 293,
 MLX_KEY_F5 = 294,
 MLX_KEY_F6 = 295,
 MLX_KEY_F7 = 296,
 MLX_KEY_F8 = 297,
 MLX_KEY_F9 = 298,
 MLX_KEY_F10 = 299,
 MLX_KEY_F11 = 300,
 MLX_KEY_F12 = 301,
 MLX_KEY_F13 = 302,
 MLX_KEY_F14 = 303,
 MLX_KEY_F15 = 304,
 MLX_KEY_F16 = 305,
 MLX_KEY_F17 = 306,
 MLX_KEY_F18 = 307,
 MLX_KEY_F19 = 308,
 MLX_KEY_F20 = 309,
 MLX_KEY_F21 = 310,
 MLX_KEY_F22 = 311,
 MLX_KEY_F23 = 312,
 MLX_KEY_F24 = 313,
 MLX_KEY_F25 = 314,
 MLX_KEY_KP_0 = 320,
 MLX_KEY_KP_1 = 321,
 MLX_KEY_KP_2 = 322,
 MLX_KEY_KP_3 = 323,
 MLX_KEY_KP_4 = 324,
 MLX_KEY_KP_5 = 325,
 MLX_KEY_KP_6 = 326,
 MLX_KEY_KP_7 = 327,
 MLX_KEY_KP_8 = 328,
 MLX_KEY_KP_9 = 329,
 MLX_KEY_KP_DECIMAL = 330,
 MLX_KEY_KP_DIVIDE = 331,
 MLX_KEY_KP_MULTIPLY = 332,
 MLX_KEY_KP_SUBTRACT = 333,
 MLX_KEY_KP_ADD = 334,
 MLX_KEY_KP_ENTER = 335,
 MLX_KEY_KP_EQUAL = 336,
 MLX_KEY_LEFT_SHIFT = 340,
 MLX_KEY_LEFT_CONTROL = 341,
 MLX_KEY_LEFT_ALT = 342,
 MLX_KEY_LEFT_SUPER = 343,
 MLX_KEY_RIGHT_SHIFT = 344,
 MLX_KEY_RIGHT_CONTROL = 345,
 MLX_KEY_RIGHT_ALT = 346,
 MLX_KEY_RIGHT_SUPER = 347,
 MLX_KEY_MENU = 348,
} keys_t;
# 263 "MLX42/include/MLX42/MLX42.h"
typedef struct mlx_texture
{
 uint32_t width;
 uint32_t height;
 uint8_t bytes_per_pixel;
 uint8_t* pixels;
} mlx_texture_t;
# 279 "MLX42/include/MLX42/MLX42.h"
typedef struct xpm
{
 mlx_texture_t texture;
 int32_t color_count;
 int32_t cpp;
 char mode;
} xpm_t;
# 301 "MLX42/include/MLX42/MLX42.h"
typedef struct mlx_instance
{
 int32_t x;
 int32_t y;
 int32_t z;
 
# 306 "MLX42/include/MLX42/MLX42.h" 3 4
_Bool 
# 306 "MLX42/include/MLX42/MLX42.h"
     enabled;
} mlx_instance_t;
# 320 "MLX42/include/MLX42/MLX42.h"
typedef struct mlx_key_data
{
 keys_t key;
 action_t action;
 int32_t os_key;
 modifier_key_t modifier;
} mlx_key_data_t;
# 340 "MLX42/include/MLX42/MLX42.h"
typedef struct mlx_image
{
 const uint32_t width;
 const uint32_t height;
 uint8_t* pixels;
 mlx_instance_t* instances;
 size_t count;
 
# 347 "MLX42/include/MLX42/MLX42.h" 3 4
_Bool 
# 347 "MLX42/include/MLX42/MLX42.h"
       enabled;
 void* context;
} mlx_image_t;
# 360 "MLX42/include/MLX42/MLX42.h"
typedef struct mlx
{
 void* window;
 void* context;
 int32_t width;
 int32_t height;
 double delta_time;
} mlx_t;


typedef enum mlx_errno
{
 MLX_SUCCESS = 0,
 MLX_INVEXT,
 MLX_INVFILE,
 MLX_INVPNG,
 MLX_INVXPM,
 MLX_INVPOS,
 MLX_INVDIM,
 MLX_INVIMG,
 MLX_VERTFAIL,
 MLX_FRAGFAIL,
 MLX_SHDRFAIL,
 MLX_MEMFAIL,
 MLX_GLADFAIL,
 MLX_GLFWFAIL,
 MLX_WINFAIL,
 MLX_STRTOOBIG,
 MLX_ERRMAX,
} mlx_errno_t;


extern mlx_errno_t mlx_errno;




typedef enum mlx_settings
{
 MLX_STRETCH_IMAGE = 0,
 MLX_FULLSCREEN,
 MLX_MAXIMIZED,
 MLX_DECORATED,
 MLX_HEADLESS,
 MLX_SETTINGS_MAX,
} mlx_settings_t;
# 414 "MLX42/include/MLX42/MLX42.h"
typedef void (*mlx_scrollfunc)(double xdelta, double ydelta, void* param);
# 424 "MLX42/include/MLX42/MLX42.h"
typedef void (*mlx_mousefunc)(mouse_key_t button, action_t action, modifier_key_t mods, void* param);
# 433 "MLX42/include/MLX42/MLX42.h"
typedef void (*mlx_cursorfunc)(double xpos, double ypos, void* param);







typedef void (*mlx_keyfunc)(mlx_key_data_t keydata, void* param);
# 453 "MLX42/include/MLX42/MLX42.h"
typedef void (*mlx_resizefunc)(int32_t width, int32_t height, void* param);
# 462 "MLX42/include/MLX42/MLX42.h"
typedef void (*mlx_closefunc)(void* param);
# 471 "MLX42/include/MLX42/MLX42.h"
typedef void mlx_win_cursor_t;
# 481 "MLX42/include/MLX42/MLX42.h"
const char* mlx_strerror(mlx_errno_t val);
# 494 "MLX42/include/MLX42/MLX42.h"
mlx_t* mlx_init(int32_t width, int32_t height, const char* title, 
# 494 "MLX42/include/MLX42/MLX42.h" 3 4
                                                                 _Bool 
# 494 "MLX42/include/MLX42/MLX42.h"
                                                                      resize);
# 503 "MLX42/include/MLX42/MLX42.h"
void mlx_set_setting(mlx_settings_t setting, int32_t value);







void mlx_close_window(mlx_t* mlx);
# 520 "MLX42/include/MLX42/MLX42.h"
void mlx_loop(mlx_t* mlx);
# 532 "MLX42/include/MLX42/MLX42.h"
void mlx_set_icon(mlx_t* mlx, mlx_texture_t* image);
# 541 "MLX42/include/MLX42/MLX42.h"
void mlx_terminate(mlx_t* mlx);






double mlx_get_time(void);
# 561 "MLX42/include/MLX42/MLX42.h"
void mlx_focus(mlx_t* mlx);
# 570 "MLX42/include/MLX42/MLX42.h"
void mlx_get_monitor_size(int32_t index, int32_t* width, int32_t* height);
# 582 "MLX42/include/MLX42/MLX42.h"
void mlx_set_window_pos(mlx_t* mlx, int32_t xpos, int32_t ypos);
# 591 "MLX42/include/MLX42/MLX42.h"
void mlx_get_window_pos(mlx_t* mlx, int32_t* xpos, int32_t* ypos);
# 601 "MLX42/include/MLX42/MLX42.h"
void mlx_set_window_size(mlx_t* mlx, int32_t new_width, int32_t new_height);
# 616 "MLX42/include/MLX42/MLX42.h"
void mlx_set_window_limit(mlx_t* mlx, int32_t min_w, int32_t min_h, int32_t max_w, int32_t max_h);







void mlx_set_window_title(mlx_t* mlx, const char* title);
# 635 "MLX42/include/MLX42/MLX42.h"

# 635 "MLX42/include/MLX42/MLX42.h" 3 4
_Bool 
# 635 "MLX42/include/MLX42/MLX42.h"
    mlx_is_key_down(mlx_t* mlx, keys_t key);
# 644 "MLX42/include/MLX42/MLX42.h"

# 644 "MLX42/include/MLX42/MLX42.h" 3 4
_Bool 
# 644 "MLX42/include/MLX42/MLX42.h"
    mlx_is_mouse_down(mlx_t* mlx, mouse_key_t key);
# 657 "MLX42/include/MLX42/MLX42.h"
void mlx_get_mouse_pos(mlx_t* mlx, int32_t* x, int32_t* y);







void mlx_set_mouse_pos(mlx_t* mlx, int32_t x, int32_t y);







void mlx_set_cursor_mode(mlx_t* mlx, mouse_mode_t mode);







mlx_win_cursor_t* mlx_create_std_cursor(cursor_t type);
# 692 "MLX42/include/MLX42/MLX42.h"
mlx_win_cursor_t* mlx_create_cursor(mlx_texture_t* texture);






void mlx_destroy_cursor(mlx_win_cursor_t* cursor);







void mlx_set_cursor(mlx_t* mlx, mlx_win_cursor_t* cursor);
# 719 "MLX42/include/MLX42/MLX42.h"
void mlx_scroll_hook(mlx_t* mlx, mlx_scrollfunc func, void* param);
# 729 "MLX42/include/MLX42/MLX42.h"
void mlx_mouse_hook(mlx_t* mlx, mlx_mousefunc func, void* param);
# 739 "MLX42/include/MLX42/MLX42.h"
void mlx_cursor_hook(mlx_t* mlx, mlx_cursorfunc func, void* param);
# 749 "MLX42/include/MLX42/MLX42.h"
void mlx_key_hook(mlx_t* mlx, mlx_keyfunc func, void* param);
# 759 "MLX42/include/MLX42/MLX42.h"
void mlx_close_hook(mlx_t* mlx, mlx_closefunc func, void* param);
# 769 "MLX42/include/MLX42/MLX42.h"
void mlx_resize_hook(mlx_t* mlx, mlx_resizefunc func, void* param);
# 780 "MLX42/include/MLX42/MLX42.h"

# 780 "MLX42/include/MLX42/MLX42.h" 3 4
_Bool 
# 780 "MLX42/include/MLX42/MLX42.h"
    mlx_loop_hook(mlx_t* mlx, void (*f)(void*), void* param);
# 790 "MLX42/include/MLX42/MLX42.h"
mlx_texture_t* mlx_load_png(const char* path);







xpm_t* mlx_load_xpm42(const char* path);






void mlx_delete_texture(mlx_texture_t* texture);
# 815 "MLX42/include/MLX42/MLX42.h"
void mlx_delete_xpm42(xpm_t* xpm);
# 824 "MLX42/include/MLX42/MLX42.h"
mlx_image_t* mlx_texture_to_image(mlx_t* mlx, mlx_texture_t* texture);
# 839 "MLX42/include/MLX42/MLX42.h"
void mlx_put_pixel(mlx_image_t* image, uint32_t x, uint32_t y, uint32_t color);
# 849 "MLX42/include/MLX42/MLX42.h"
mlx_image_t* mlx_new_image(mlx_t* mlx, uint32_t width, uint32_t height);
# 868 "MLX42/include/MLX42/MLX42.h"
int32_t mlx_image_to_window(mlx_t* mlx, mlx_image_t* img, int32_t x, int32_t y);
# 881 "MLX42/include/MLX42/MLX42.h"
void mlx_delete_image(mlx_t* mlx, mlx_image_t* image);
# 892 "MLX42/include/MLX42/MLX42.h"

# 892 "MLX42/include/MLX42/MLX42.h" 3 4
_Bool 
# 892 "MLX42/include/MLX42/MLX42.h"
    mlx_resize_image(mlx_image_t* img, uint32_t nwidth, uint32_t nheight);
# 904 "MLX42/include/MLX42/MLX42.h"
void mlx_set_instance_depth(mlx_instance_t* instance, int32_t zdepth);
# 917 "MLX42/include/MLX42/MLX42.h"
mlx_image_t* mlx_put_string(mlx_t* mlx, const char* str, int32_t x, int32_t y);






const mlx_texture_t* mlx_get_font(void);
# 935 "MLX42/include/MLX42/MLX42.h"
int32_t mlx_get_texoffset(char c);
